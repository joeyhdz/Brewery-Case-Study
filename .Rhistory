################################### KNN Prediction Model Data #########################
# test to see how the model will work using beer_brew
# make a Dataframe without NA so that we can run KNN:
beer_predict <- na.omit(beer_brew)
# sanity check
#view(beer_predict)
# creating a data frame that can be used to minimize the noise between Ale and IPA
ipa_knn <- beer_predict %>% select(Brewery_id,beer_name, IBU, ABV, Style) %>%
group_by(Brewery_id) %>% filter(str_detect(Style, "IPA")) %>%
mutate(Style = "ipa")
ale_knn <- beer_predict %>% select(Brewery_id,beer_name, IBU, ABV, Style) %>%
group_by(Brewery_id) %>% filter(str_detect(Style, "Ale")) %>%
mutate(Style = "ale")
# view(ipa_knn)  # 374
# view(ale_knn) # 519
combine_knn <- full_join(ipa_knn, ale_knn)
# view(combine_knn)
# simple test to see if the data works together within the KNN function
# my_beer_test <- data.frame(IBU = c(.05, .04, .043), ABV = c(.06, .055, .065))
# knn(beer_predict[,c(7,8)], my_beer_test, beer_predict$Style, k = 3, prob = TRUE)
# viewing what matches each of these strings will return before filtering.
# (str_view_all(beer_predict$Style, 'Ale', match = TRUE))
# (str_view_all(beer_predict$Style, 'IPA', match = TRUE))
# creating test variable to call so we can see if the filter works
#test_ale_filter <- beer_predict %>% filter(str_detect(Style, 'Ale'))
#view(test_ale_filter$Style) # viewing the filter for effectiveness
# repeating the same process for the IPA
#test_ipa_filter <- beer_predict %>% filter(str_detect(Style, 'IPA'))
#view(test_ipa_filter$Style) # viewing the filter for effectiveness
# using both filters above to create one combo test filter
#test_combo_filter<- beer_predict %>% filter(str_detect(Style, 'IPA') | str_detect(Style, "Ale"))
#view(test_combo_filter$Style)
# creating the finalized data frame to use for test/train split etc.
# beer_predict_fin <- beer_predict %>% filter(str_detect(Style, 'IPA') | str_detect(Style, "Ale"))
# glimpse(beer_predict_fin)
################################### KNN Test type 2 #########################
#checking dimensions to understand what our test/train will look like
# glimpse(beer_predict_fin)
# nrow(combine_knn) # total 893 rows
# round(nrow(combine_knn)*.3) # total 268
set.seed(765)
intrain <- sample(nrow(combine_knn), round(nrow(combine_knn)*.30))
beer_train <- combine_knn[intrain,]
beer_test <- combine_knn[-intrain,]
# setting up the classification
classification <- knn(beer_train[,c(3,4)],
beer_test[,c(3,4)],
beer_train$Style,
k = 3, prob = TRUE)
# setting up a passable data for confusion matrix
u <- union(classification, beer_test$Style)
t <- table(factor(classification, u), factor(beer_test$Style, u), dnn = c("Prediction", "Truth"))
# confusion matrix for more stats on the model
CM <- confusionMatrix(t)
beer_knn_plot <- as.data.frame(CM$table)
beer_knn_plot$Prediction <- factor(beer_knn_plot$Prediction, levels = rev(levels(beer_knn_plot$Truth)))
ggplot(beer_knn_plot, aes(Prediction, Truth, fill = (Freq))) +
geom_tile(show.legend = FALSE) + geom_text(aes(label = (Freq))) +
scale_fill_gradient(low = "light blue", high = "#009194") +
labs(x = "Truth", y = "Prediction") +
scale_x_discrete(labels = c("IPA", "Ale")) +
scale_y_discrete(labels = c("Ale", "IPA"))+
coord_flip()+
ggtitle("Confusion Matrix Categorizing Model Predictions Against Actual Values")
cat('Accuracy:',CM$overall[1]*100,"%",
"\nSensitivity:",CM$byClass[1]*100, "%",
"\nSpecificity:",CM$byClass[2]*100, "%")
################################### KNN finding best K #########################
iterations = 50
num_of_k = 50
split_percent = .3
model_accuracy = matrix(nrow = iterations, ncol = num_of_k)
model_specificity = matrix(nrow = iterations, ncol = num_of_k)
model_sensitivity = matrix(nrow = iterations, ncol = num_of_k)
for (j in 1:iterations)
{
set.seed(765)
intrain2 <- sample(nrow(combine_knn), round(nrow(combine_knn)*split_percent))
train2 <- combine_knn[intrain2,]
test2 <- combine_knn[-intrain2,]
for(i in 1:num_of_k)
{
classify = knn(train2[,c(3,4)],
test2[,c(3,4)],
train2$Style,
k = i, prob = TRUE)
u = union(classify, test2$Style)
t = table(factor(classify, u), factor(test2$Style, u))
CM = confusionMatrix(t)
model_accuracy[j,i] = CM$overall[1]
model_specificity[j,i] = CM$byClass[1]
model_sensitivity[j,i] = CM$byClass[2]
}
}
mean_accuracy = colMeans(model_accuracy)
# to determine which level of k provided the best accuracy so that we can tune the model if needed
# which.max(mean_accuracy)
mean_specificity = colMeans(model_specificity)
mean_sensitivity = colMeans(model_sensitivity)
plot(seq(1,num_of_k,1),
mean_accuracy, type = "l",
xlab = "Kth value 1:50",
ylab = "Mean value of measured Accuracy")
plot(seq(1, num_of_k, 1),
mean_specificity,
type = 'l',
xlab = "Kth value 1:50",
ylab = "Mean value of measured Specificity")
plot(seq(1, num_of_k, 1),
mean_sensitivity, type = 'l',
xlab = "Kth value 1:50",
ylab = "Mean value of measured Sensitivity")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units Offered in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites") + abline(v = 30)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites") + geom_hline(xintercept = 20)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites") + geom_vline(xintercept = 20)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites") + geom_vline(xintercept = 20, linetype = "dotted", color = "black", size = 1.5)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites") + geom_vline(xintercept = 20, linetype = "dotted", color = "black", size = 1.5)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites") + geom_vline(xintercept = 30, linetype = "dotted", color = "black", size = 1.5)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
exta_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
view(extra_data)
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
view(extra_data)
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(color = 'red'))
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'))
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'), color = 'black')
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'), color = 'black', alpha = .5)
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'), color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'), color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),binwidth = 20, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),binwidth = .20, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 20, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 10, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 40, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 34, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
extra_data %>% ggplot(aes(Style)) +
geom_histogram()
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
summary(extra_data$IBU)
summary(extra_data$ABV)
summary(extra_data$ABV*100)
summary(na.omit(extra_data$ABV)*100)
summary(extra_data$IBU)
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100) # Q
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
extra_data %>% ggplot(aes(Style, ABV))+
geom_point()
extra_data %>% ggplot(aes(Style, cities))+
geom_point()
extra_data %>% ggplot(aes(Style, City))+
geom_point()
extra_data %>% ggplot(aes(Style, City))+
geom_point()+
coord_flip()
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
extra_data %>% ggplot(aes(Style))+
geom_point(aes(color = City))+
coord_flip()
extra_data %>% ggplot(aes(Style, State))+
geom_point(aes(color = City))+
coord_flip()
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
geom_point(aes(color = City)) +
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, City))+ geom_point(aes(color = City))
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City))
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_bar(stat = 'identity')
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_bar(stat = 'identity')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, color = City)) +
geom_bar(stat = 'identity')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style)) +
geom_bar(stat = 'identity')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style)) +
geom_bar(stat = 'count')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style)) +
geom_bar(stat = 'count', fill = city)+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City)) +
geom_bar(stat = 'count')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, alpha = .4)) +
geom_bar(stat = 'count')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, alpha = .4, position = 'dodge')) +
geom_bar(stat = 'count')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, position = 'dodge')) +
geom_bar(stat = 'count')+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, position = 'dodge')) +
geom_bar()+
coord_flip()
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, fill = City)) +
geom_bar()+
coord_flip()
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, position = 'dodge')) +
geom_bar()+
coord_flip()
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
# IPA ONLY SCATTER
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
# ALE ONLY SCATTER
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, position = 'dodge')) +
geom_bar()+
coord_flip()
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, fill = City)) +
geom_bar()+
coord_flip()
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
