# setting up the classification
classification <- knn(beer_train[,c(3,4)],
beer_test[,c(3,4)],
beer_train$Style,
k = 3, prob = TRUE)
# setting up a passable data for confusion matrix
u <- union(classification, beer_test$Style)
t <- table(factor(classification, u), factor(beer_test$Style, u), dnn = c("Prediction", "Truth"))
# confusion matrix for more stats on the model
CM <- confusionMatrix(t)
beer_knn_plot <- as.data.frame(CM$table)
beer_knn_plot$Prediction <- factor(beer_knn_plot$Prediction, levels = rev(levels(beer_knn_plot$Truth)))
ggplot(beer_knn_plot, aes(Prediction, Truth, fill = (Freq))) +
geom_tile(show.legend = FALSE) + geom_text(aes(label = (Freq))) +
scale_fill_gradient(low = "light blue", high = "#009194") +
labs(x = "Truth", y = "Prediction") +
scale_x_discrete(labels = c("IPA", "Ale")) +
scale_y_discrete(labels = c("Ale", "IPA"))+
coord_flip()+
ggtitle("Confusion Matrix Categorizing Model Predictions Against Actual Values")
################################### KNN Prediction Model Data #########################
# test to see how the model will work using beer_brew
# make a Dataframe without NA so that we can run KNN:
beer_predict <- na.omit(beer_brew)
# make a Dataframe without NA so that we can run KNN:
beer_predict <- na.omit(beer_brew)
# make a Dataframe without NA so that we can run KNN:
beer_predict <- na.omit(beer_brew)
library(tidyverse)
library(ggplot2)
library(janitor)
library(usmap)
library(caret)
library(e1071)
library(class)
library(knitr)
library(ggthemes)
beer_data <-read.csv("C:/Users/Joey/Desktop/DDS_Work/Unit - 8/Beers.csv")
brew_data <- read.csv("C:/Users/Joey/Desktop/DDS_Work/Unit - 8/Breweries.csv")
#################### Exploring Raw Data ###########################
# check rows and columns
# head(beer_data)
# head(brew_data)
# rename columns for merging
names(beer_data)[1] <- 'beer_name'
names(brew_data)[2] <- 'Brew_name'
names(brew_data)[1]<- 'Brewery_id'
# checking for missing values beer
# sapply(beer_data,function(x) sum(is.na(x))/nrow(beer_data)) # 2.5% missing values - ABV | 41.7% missing values in IBU
# sapply(beer_data,function(x) sum(x== ""))
# checking for missing values brew
# sapply(brew_data,function(x) sum(is.na(x))/nrow(brew_data))
# sapply(brew_data,function(x) sum(x== ""))
# addressing the missing values from beer
beer_data[854,'Style'] = "Scottish Ale"
beer_data[867, 'Style'] = 'Marzen'
# looking for duplicates in data
# brew_data %>% get_dupes(Brewery_id)
# brew_data %>% get_dupes(Brew_name)
# beer_data %>% get_dupes(beer_name)
# beer_data %>% get_dupes(Brewery_id)
# beer_data %>% get_dupes(Beer_ID)
# addresses the duplicates in brew_data
brew_data<- brew_data[-c(96,378,262,139),]
# addresses the duplicates in beer_data
beer <- beer_data[!duplicated(beer_data$beer_name),]
# beer %>% get_dupes(Brewery_id) # these duplicates are for various drinks from the same brew id
# beer %>% get_dupes(Beer_ID) # fixed
# beer %>% get_dupes(beer_name)
# gets rid of the white space before the State abb.
brew_data$State<-trimws(brew_data$State, "left")
# merging beer and brew_data - with an inner join
beer_brew <- merge(brew_data, beer, by ='Brewery_id')
################################### Question 1 ##################################
# this gets only one brewery name so that we don't have multiple brew representation because
# of the multiple drinks served by that one location.
state_num_data <- beer_brew[!duplicated(beer_brew$Brew_name),]
# the n_distinct takes care of the potential repeat brew representation making last line redundant
# but kept in as precautionary measure.
state_brew_plot <- state_num_data %>% group_by(State) %>%
summarise(num_brew = n_distinct(Brew_name),
mean_abv = mean(ABV), mean_ibu = mean(IBU)) %>%
arrange(desc(num_brew))
# changes column State to state to satisfy the usmap argument
names(state_brew_plot)[1] <- 'state'
# makes into dataframe
state_brew_plot <- as.data.frame(state_brew_plot)
# plot of the Concentration of Breweries in the US
plot_usmap(data=state_brew_plot[,1:2],
regions = "states",
labels = TRUE,label_color = "black",
values = "num_brew") +
scale_fill_gradient(low = 'white', high = 'red')+
labs(title = 'Distribution of Breweries Across The United States',
fill = "Brewery \nAmount") +
theme(legend.position = "right")
# SECONDARY MAP TO DISPLAY ACTUAL REPRESENTAION OF NUMERICAL VALUE PER EACH STATE
# get centroids
centroid_labels <- usmapdata::centroid_labels("states")
names(centroid_labels)[4] <- 'state'
# join data to centroids (using lat/long as coord. for state centers on map plot)
data_labels <- merge(centroid_labels, state_brew_plot, by = "state")
# create US map with centroids and lat/long as the label
brews_per_state <- plot_usmap(data = state_brew_plot[,1:2],
values = "num_brew",
color = "black",
labels = F) +
guides(fill = "none") +
geom_text(data = data_labels,aes(x = x, y = y,
label = scales::number(num_brew, accuracy = 1)),color = "black")+
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Distribution of Breweries Across The United States",
fill = "Brewery \nAmount") +
theme(legend.position = "right")
brews_per_state
# table for display in RMD file
kable(state_num_data %>% group_by(State) %>%
summarise(Num_Brew = n_distinct(Brew_name),
Mean_ABV = mean(na.omit(ABV)), Mean_IBU = mean(na.omit(IBU))) %>%
arrange(desc(Num_Brew)))
head(beer_brew)
tail(beer_brew)
################################### Question 4 ##################################
# this will return medians for each state ( NA NOT INCLUDED )
state_medians <- beer_brew %>% group_by(State) %>%
summarise(num_brew = n_distinct(Brew_name),
median_abv = median(ABV, na.rm = TRUE), median_ibu = median(IBU, na.rm = TRUE)) %>%
arrange(desc(num_brew))
# to return the medians data
# state_medians
# convert to data frame
state_medians <- as.data.frame(state_medians)
# convert variable column from S to s (upper to lower) so that it works with data in next question
names(state_medians)[1] <- 'state'
# plot Median ABV
state_medians %>% ggplot(aes(x = reorder(state, desc(median_abv)), y = median_abv*100, fill = state))+
geom_bar(stat='identity', show.legend = FALSE)+
coord_flip() +
ggtitle("Bar Plot of Median Alcohol by Volume (ABV) Values for Each State") +
xlab("State by Abbreviation")+
ylab("Median Value of Alcohol by Volume in Percent")
# plot Median IBU
state_medians %>% ggplot(aes(x = reorder(state, desc(median_ibu)), y = median_ibu, fill = state))+
geom_bar(stat = 'identity', show.legend = FALSE) +
coord_flip() +
ggtitle("Bar plot of Median IBU Values for Each State")+
xlab("State by Abbreviation")+
ylab("Median International Bitterness Units (IBU)")
# creating a variable to call for median labels
median_labels <- merge(centroid_labels, state_medians, by ='state')
# create the ABV map
abv_state_plot <- plot_usmap(data = state_medians[,1:3],
values = "median_abv",
color = "black",
labels = F) +
guides(fill = "none") +
geom_text(data = median_labels, aes(
x = x, y = y,
label = scales::number(median_abv * 100, accuracy = 0.01)), color = "black") +
scale_fill_gradient(low = "white", high = "red") +
labs(title = "Distribution of Median ABV for Each State")
# create the IBU map
ibu_state_plot <- plot_usmap(data = state_medians[,1:4],
values = "median_ibu",
color = "black",
labels = F)+
guides(fill = "none")+
geom_text(data = median_labels, aes(
x = x, y = y,
label = scales::number(median_ibu, accuracy = 1)), color = "black") +
scale_fill_gradient(low = "white", high = "red")+
labs(title = "Distribution of Median IBU for Each State")
# plot the ABV Median state plot
abv_state_plot
# plot the IBU Median state plot
ibu_state_plot
################################### Question 5 ##################################
# to call on selected data that will only return the sought after information
max_abv <- beer_brew %>% select(ABV, State)
max_abv[which.max(max_abv$ABV),]
# mean(max_abv$ABV, na.rm = TRUE) * 100 # 5.99 %
# median(max_abv$ABV, na.rm = TRUE) * 100 # 5.7 %
# plot for IBU
max_ibu <- beer_brew %>% select(IBU, State)
max_ibu[which.max(max_ibu$IBU),]
# mean(max_ibu$IBU, na.rm = TRUE) # 42.955
# median(max_ibu$IBU, na.rm = TRUE) # 35
################################### Question 6 ##################################
abv_dis_plot <- beer_brew %>% select(ABV,Brewery_id)
abv_dis_plot %>% ggplot(aes(ABV * 100)) +
geom_histogram(color = 'black',aes(fill = 'red'), binwidth = .25, alpha = .5, show.legend = FALSE) +
ggtitle('Distribution of the Alcohol by Volume Content in Beer From Various Breweries')+
ylab('Frequency') + xlab('Alcohol by Volume in Percent %')
summary(beer_brew$ABV * 100)
################################### Question 7 ##################################
ibu_abv_plot <- beer_brew %>% select(IBU,ABV,Style)
ibu_abv_plot %>% ggplot(aes(x = ABV, y = IBU)) +
geom_point(aes(color = Style), show.legend = FALSE) +
geom_smooth(se = FALSE, color = "black") +
ggtitle("Scatterplot of ABV and IBU Values of All Beer Styles") +
xlab("Alcohol by Volume in Percent %") +
ylab("Bitterness Rating (IBUs)")
# visualizing scatter plot of ABV and IBU with Style filter for all IPA
ipa_viz <- ibu_abv_plot %>% filter(str_detect(Style, 'IPA'))
ipa_viz %>% ggplot(aes(x = ABV, y = IBU)) +
geom_point(aes(color = Style))+
geom_smooth(se = FALSE, color = 'black') +
ggtitle("Scatterplot of ABV and IBU Values of Only IPA Beer Style") +
xlab("Alcohol by Volume in Percent %") +
ylab("Bitterness Rating (IBUs)")
# visualizing scatter plot of ABV and IBU with Style filter for all ALE
ale_viz <- ibu_abv_plot %>% filter(str_detect(Style, "Ale"))
ale_viz %>% ggplot(aes(x = ABV, y = IBU)) +
geom_point(aes( color = Style), show.legend = FALSE) +
geom_smooth(se = FALSE, color = 'black') +
ggtitle("Scatterplot of ABV and IBU Values of Only Ale Beer Style") +
xlab("Alcohol by Volume in Percent %") +
ylab("Bitterness Rating (IBUs)")
# visualizing scatter plot of ABV and IBU with style filter for not ALE, or IPA
else_viz <- ibu_abv_plot %>% filter(!str_detect(Style, "Ale")) %>% filter(!str_detect(Style, "IPA"))
else_viz %>% ggplot(aes(x = ABV * 100, y = IBU)) +
geom_point(aes(color = Style), show.legend = FALSE) +
geom_smooth(se = FALSE, color = "black") +
ggtitle("Scatterplot of ABV and IBU Values of Beer Styles Other Than Ale, or IPA") + xlab("Alcohol by Volume in Percent %")+ylab("Bitterness Rating (IBUs)")
################################### KNN Prediction Model Data #########################
# test to see how the model will work using beer_brew
# make a Dataframe without NA so that we can run KNN:
beer_predict <- na.omit(beer_brew)
# sanity check
#view(beer_predict)
ipa_knn_2 <- beer_predict %>% select(Brewery_id,beer_name, IBU, ABV, Style) %>%
group_by(Brewery_id) %>% filter(between(IBU, 55, 100)) %>%
mutate(Style = "ipa")
ale_knn_3 <- beer_predict %>% select(Brewery_id,beer_name, IBU, ABV, Style) %>%
group_by(Brewery_id) %>% filter(str_detect(Style, "Ale")) %>% filter(!between(IBU, 55, 100)) %>%
mutate(Style = "ale")
combine_knn_2 <- full_join(ipa_knn_2, ale_knn_3)
set.seed(765)
intrain <- sample(nrow(combine_knn_2), round(nrow(combine_knn_2)*.30))
beer_train <- combine_knn_2[intrain,]
beer_test <- combine_knn_2[-intrain,]
# setting up the classification
classification <- knn(beer_train[,c(3,4)],
beer_test[,c(3,4)],
beer_train$Style,
k = 3, prob = TRUE)
# setting up a passable data for confusion matrix
u <- union(classification, beer_test$Style)
t <- table(factor(classification, u), factor(beer_test$Style, u), dnn = c("Prediction", "Truth"))
# confusion matrix for more stats on the model
CM <- confusionMatrix(t)
cat('Accuracy:',CM$overall[1]*100,"%",
"\nSensitivity:",CM$byClass[1]*100, "%",
"\nSpecificity:",CM$byClass[2]*100, "%")
beer_knn_plot <- as.data.frame(CM$table)
beer_knn_plot$Prediction <- factor(beer_knn_plot$Prediction, levels = rev(levels(beer_knn_plot$Truth)))
ggplot(beer_knn_plot, aes(Prediction, Truth, fill = (Freq))) +
geom_tile(show.legend = FALSE) + geom_text(aes(label = (Freq))) +
scale_fill_gradient(low = "light blue", high = "#009194") +
labs(x = "Truth", y = "Prediction") +
scale_x_discrete(labels = c("IPA", "Ale")) +
scale_y_discrete(labels = c("Ale", "IPA"))+
coord_flip()+
ggtitle("Confusion Matrix Categorizing Model Predictions Against Actual Values")
beer_predict$IsIPA = ifelse(beer_predict$IBU > 55 & beer_predict$IBU < 100, "IPA", "Not IPA")
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA), stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of IPAs vs Not IPAs Currently in the US")
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
# IPA ONLY SCATTER
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
# ALE ONLY SCATTER
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, position = 'dodge')) +
geom_bar()+
coord_flip()
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, fill = City)) +
geom_bar()+
coord_flip()
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
# Scatter plot for the IBU for each city in TEXAS
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
# histogram for distribution of IBU in Texas
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
# IPA ONLY SCATTER
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
# ALE ONLY SCATTER
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, City)) +
geom_point(aes(color = City), show.legend = FALSE)
extra_data %>% filter(str_detect(Style, 'Ale')) %>%
ggplot(aes(Style, fill = City, position = 'dodge')) +
geom_bar()+
coord_flip()
extra_data %>% filter(str_detect(Style, 'IPA')) %>%
ggplot(aes(Style, fill = City)) +
geom_bar()+
coord_flip()
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
# histogram for distribution of IBU in Texas
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()
summary(na.omit(extra_data$IBU))
summary(na.omit(extra_data$ABV)*100)
?ggplot()
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()+
theme(axis.text.y = element_blank())
extra_data %>% ggplot(aes(Style, City))+
geom_point(aes(color = City))+
coord_flip()+
theme(axis.text.x = element_blank())
# histogram for distribution of ABV in Texas
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)+
ggtitle('Histogram of the Distribution of ABV Values in Texas') +
xlab("International Bitterness Units (IBUs)")+
ylab("Count")
# histogram for distribution of ABV in Texas
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),show.legend = FALSE,bins = 35, color = 'black', alpha = .7)+
ggtitle('Histogram of the Distribution of ABV Values in Texas') +
xlab("International Bitterness Units (IBUs)")+
ylab("Count")
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA), stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of IPAs vs Not IPAs Currently in the US")+
xlab('test')
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA), stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of IPAs vs Not IPAs Currently in the US")+
xlab('Condition')
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA), stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of IPAs vs Not IPAs Currently in the US")+
xlab('Condition')+
ylab('Percentage %')
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA),show.legend = FALSE, stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of IPAs vs Not IPAs Currently in the US")+
xlab('Condition')+
ylab('Percentage %')
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA),show.legend = FALSE, stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of Ipa vs Not Ipa Beer in the United States")+
xlab('Condition')+
ylab('Percentage %')
beer_predict %>%
group_by(IsIPA) %>%
dplyr::summarize(count=n()) %>%
mutate(percent = (count/sum(count))*100) %>%
ggplot() +
geom_bar(aes(y=percent, x = IsIPA, fill = IsIPA),show.legend = FALSE, stat="identity") +
scale_fill_manual(values=c("green","red")) +
coord_flip() +
ggtitle("Percentage of IPA vs Not-IPA Beer in the United States")+
xlab('Condition')+
ylab('Percentage %')
extra_data <- beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX")
# Scatter plot for ABV for each city in Texas
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter(State == "TX") %>%
ggplot(aes(City, ABV, color = City))+
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of Alcohol by Volume Offered in Cities Across Texas") +
ylab('Alcohol by Volume (ABV) in Percent %') +
xlab('Texas Cities')
# histogram for distribution of ABV in Texas
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),show.legend = FALSE,bins = 35, color = 'black', alpha = .7)+
ggtitle('Histogram of the Distribution of ABV Values in Texas') +
xlab("International Bitterness Units (IBUs)")+
ylab("Count")
# Scatter plot for the IBU for each city in TEXAS
beer_brew %>% select(City, State, IBU, ABV, Style, Ounces) %>% filter( State == "TX") %>%
ggplot(aes(City, IBU, color = City)) +
geom_point(show.legend = FALSE) +
coord_flip()+
ggtitle("Scatter Plot of International Bitterness Units in Cities Across Texas") +
ylab("International Bitterness Units IBU") +
xlab("Texas Citites")
# histogram for distribution of IBU in Texas
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),bins = 35, color = 'black', alpha = .7)
# histogram for distribution of IBU in Texas
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),show.legend = FALSE,bins = 35, color = 'black', alpha = .7)
# histogram for distribution of IBU in Texas
extra_data %>% ggplot(aes(IBU))+
geom_histogram(aes(fill = 'red'),show.legend = FALSE,bins = 35, color = 'black', alpha = .7)+
ggtitle("Histogram of the Distribution of ABV Values in Texas")+
xlab("International Bitterness Units (IBUs)")+
ylab('Count')
# histogram for distribution of ABV in Texas
extra_data %>% ggplot(aes(ABV)) +
geom_histogram(aes(fill = 'red'),show.legend = FALSE,bins = 35, color = 'black', alpha = .7)+
ggtitle('Histogram of the Distribution of ABV Values in Texas') +
xlab("Alcohol by Volume in Percent (%)")+
ylab("Count")
# histogram for distribution of ABV in Texas
extra_data %>% ggplot(aes(ABV*100)) +
geom_histogram(aes(fill = 'red'),show.legend = FALSE,bins = 35, color = 'black', alpha = .7)+
ggtitle('Histogram of the Distribution of ABV Values in Texas') +
xlab("Alcohol by Volume in Percent (%)")+
ylab("Count")
library(tidyverse)
library(ggplot2)
library(janitor)
library(usmap)
library(caret)
library(e1071)
library(class)
library(knitr)
library(ggthemes)
beer_data <-read.csv("C:/Users/Joey/Desktop/DDS_Work/Unit - 8/Bers.csv")
library(tidyverse)
library(ggplot2)
library(janitor)
library(usmap)
library(caret)
library(e1071)
library(class)
library(knitr)
library(ggthemes)
beer_data <-read.csv("C:/Users/Joey/Desktop/DDS_Work/Unit - 8/Beers.csv")
brew_data <- read.csv("C:/Users/Joey/Desktop/DDS_Work/Unit - 8/Breweries.csv")
